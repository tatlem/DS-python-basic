"""
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, data):
        self.data = data

    # def set_nums(self, y, x):

    def __str__(self):
        r = ''

        for row in self.data:
            for column in row:
                r += f'{column}\t'

            r += '\n'

        return r

    def __add__(self, other):
        x = 0
        y = 0
        m1 = self.data
        m2 = other.data
        m_res = []

        for row in self.data:
            m_res.append([])

            for column in row:
                m_res[y].append([])
                res = m1[y][x] + m2[y][x]
                m_res[y][x] = res
                x += 1

            x = 0
            y += 1

        return Matrix(m_res)


# matrix1 = Matrix([
#     [31, 32],
#     [37, 43],
#     [51, 86],
# ])
#
# matrix2 = Matrix([
#     [3, 5],
#     [2, 4],
#     [-1, 64],
# ])

matrix1 = Matrix([
    [1, 2],
    [3, 4],
])
matrix2 = Matrix([
    [-1, -2],
    [-3, -4],
])

print(matrix1)
print('+\n')
print(matrix2)
print('=\n')

matrix_res = matrix1 + matrix2
print(matrix_res)
